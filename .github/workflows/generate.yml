name: Generate
on:
  push:
  pull_request:
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Set up Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5
        with:
          go-version: 1.18
      - name: Test
        run: |
          set -e
          go test -coverprofile=coverage.out
          echo "# Code coverage summary" >> $GITHUB_STEP_SUMMARY
          echo "|File|Package|Coverage|" >> $GITHUB_STEP_SUMMARY
          echo "|----|-------|--------|" >> $GITHUB_STEP_SUMMARY
          go tool cover -func coverage.out | sed -e 's/\s\s*/|/g' -e 's/^/|/g' -e 's/$/|/g' >> $GITHUB_STEP_SUMMARY
      - name: Build
        run: go run generate.go
      - name: Upload artifacts
        uses: actions/upload-artifact@1eb3cb2b3e0f29609092a73eb033bb759a334595 # v4
        with:
          name: gh-pages
          path: gh-pages/*
          if-no-files-found: error
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    concurrency:
      group: "gh-pages-deploy"
      cancel-in-progress: false
    permissions:
      contents: write
      pages: write
      id-token: write
    needs:
      - build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        run: |
          set -euo pipefail
          git clone -b gh-pages https://${GITHUB_REPOSITORY_OWNER}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY} dist || (
            set -euo pipefail
            mkdir -p dist
            cd dist
            git init
            git checkout -b gh-pages
            git remote add origin https://${GITHUB_REPOSITORY_OWNER}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}
          )
      - name: Download artifacts
        uses: actions/download-artifact@6b208ae046db98c579e8a3aa621ab581ff575935 # v4
        with:
          name: gh-pages
          path: artifacts
      - name: Deploy
        run: |
          set -euo pipefail
          rsync -az --exclude=.git --delete ./artifacts/ ./dist/
          cd dist
          git config user.name "Arcabot"
          git config user.email 110231824+arcalot-bot@users.noreply.github.com
          git add .
          if ! git diff-index --quiet HEAD --; then
            git commit -m "Publish"
            git push --set-upstream --force origin gh-pages
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
